%C Copyright 2022 PerceptiSys Ltd (Stephen Gaito)
%C
%C Permission is hereby granted, free of charge, to any person
%C obtaining a copy of this software and associated documentation
%C files (the "Software"), to deal in the Software without
%C restriction, including without limitation the rights to use,
%C copy, modify, merge, publish, distribute, sublicense, and/or sell
%C copies of the Software, and to permit persons to whom the
%C Software is furnished to do so, subject to the following
%C conditions:
%C
%C    The above copyright notice and this permission notice shall
%C    be included in all copies or substantial portions of the
%C    Software.
%C
%C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%C EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%C OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%C NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%C HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%C WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%C FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%C OTHER DEALINGS IN THE SOFTWARE.

%D \module
%D   [     file=t-litprog,
%D      version=2022.12.02,
%D        title=\CONTEXT\ User module,
%D     subtitle=Literate Programming in \ConTeXt,
%D       author=Stephen Gaito,
%D         date=\currentdate,
%D    copyright=PerceptiSys Ltd (Stephen Gaito),
%D        email=stephen@perceptisys.co.uk,
%D      license=MIT License]

% begin info
%
% title   : Literate Programming in ConTeXt
% comment : Provides structured document and code generation
% status  : under development, mkiv/mkxl only
%
% end info

% see: https://bitbucket.org/philexander/context-highlight
\usemodule[t-highlight-cpp]
\registerctxluafile{t-litprog.lua}

% see: https://wiki.contextgarden.net/TextBackground
% see: https://www.contextgarden.net/Command/definetextbackground

\def\lpicSingleArgRelax[#1]{\relax}
\def\lpicTSingleArgRelax#1{\relax}
\def\lpicDoubleArgRelax[#1][#2]{\relax}
\def\lpicTDoubleArgRelax#1#2{\relax}

\def\copyrightOwner{\dosingleempty\lpicSingleArgRelax}

\definetextbackground%
  [LitProgFrame]
  [ location=paragraph, background=color, backgroundcolor=white,
    leftoffset=.5\bodyfontsize, rightoffset=.5\bodyfontsize,
    topoffset=.5\bodyfontsize,  bottomoffset=.5\bodyfontsize
  ]

% see: https://wiki.contextgarden.net/Verbatim_text

\def\fixLitProgs#1{\directlua{thirddata.litProg.createFixLitProgs('#1')}}

\unexpanded\def\defineLitProgs{
  \dotripleempty\doDefineLitProgs
}

\unexpanded\def\doDefineLitProgs[#1][#2][#3]{
  \ifthirdargument%
    \doDefineLitProgsTriple{#1}{#2}{#3}%
  \else\ifsecondargument%
    \doDefineLitProgsDouble{#1}{#2}%
  \else\iffirstargument%
    \doDefineLitProgsSingle{#1}%
  \else%
    \doDefineLitProgsZero%
  \fi\fi\fi%
}

\unexpanded\def\doDefineLitProgsTriple#1#2#3{
  \definetyping[#1][#2][#3]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsDouble#1#2{
  \definetyping[#1][#2]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsSingle#1{
  \definetyping[#1]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsZero{
  \errmessage{
    \string\\defineLitProgs
    requires at least one argument,
    you have provided none.
  }
}

\defineLitProgs%
  [MkIVCode]%
  [ option=TEX, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [MpIVCode]%
  [ option=MP, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [LuaCode]%
  [option=LUA, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [LuaTemplate]%
  [option=LUA, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

%\def\defaultCHeaderLicense{\dosingleempty\lpicSingleArgRelax}
%\def\createsCHeader{\dodoubleempty\lpicDoubleArgRelax}
%\def\addCHeaderLicense{\dodoubleempty\lpicDoubleArgRelax}

\defineLitProgs%
  [CHeader]%
  [option=CPP, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]
\defineLitProgs%
  [CppHeader]%
  [option=CPP, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

%\def\defaultCCodeLicense{\dosingleempty\lpicSingleArgRelax}
%\def\buildsCCodeLibrary{\dodoubleempty\lpicDoubleArgRelax}
%\def\buildsCCodeApplication{\dodoubleempty\lpicDoubleArgRelax}
%\def\createsCCode{\dodoubleempty\lpicDoubleArgRelax}
%\def\addCCodeLicense{\dodoubleempty\lpicDoubleArgRelax}

\defineLitProgs%
  [CCode]%
  [option=CPP, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]
\defineLitProgs%
  [CppCode]%
  [option=CPP, numbering=line, tab=2,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\unexpanded\def\indexCCode[#1]{
  \directlua{
    thirddata.litProg.addCCodeIndex('#1')
  }
}

%\definetyping%
%  [Lmsfile]%
%  [option=LUA, numbering=line, tab=2,
%    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
%  ]

\def\startDescription#1#2{\startitemize}
\def\creates#1#2{\item creates: #2 of type {\bf #1}}
\def\requires#1#2{\item requires: #2 of type {\bf #1}}
\def\stopDescription{\stopitemize}
